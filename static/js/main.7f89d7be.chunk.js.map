{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","state","newMovie","hasTitle","hasImgUrl","hasImdbUrl","hasImdbId","handleChange","event","target","name","value","setState","validateInput","validation","toUpperCase","slice","fieldValue","test","clearForm","isSubmittedDataValid","handleSubmit","preventDefault","onAdd","props","this","onSubmit","htmlFor","type","id","placeholder","classNames","onChange","onBlur","rows","React","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"syEAKaA,EAA6B,SAAC,GAAD,IACxCC,EADwC,EACxCA,MAAOC,EADiC,EACjCA,YAAaC,EADoB,EACpBA,OAAQC,EADY,EACZA,QADY,OAGxC,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKH,EACLI,IAAI,kBAIV,sBAAKF,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJC,IAAI,aAIV,qBAAKF,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BJ,SAI/B,sBAAKI,UAAU,UAAf,UACGH,EACD,uBACA,mBAAGM,KAAMJ,EAAT,4BC1BKK,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKL,UAAU,SAAf,SACGK,EAAOC,KAAI,SAAAC,GAAK,OACf,cAAC,EAAD,eAAkCA,GAAlBA,EAAMC,c,uBCQfC,G,MAAb,4MACEC,MAAe,CACbC,SAAU,CACRf,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTS,OAAQ,IAEVI,UAAU,EACVC,WAAW,EACXC,YAAY,EACZC,WAAW,GAZf,EAeEC,aAAe,SACbC,GAEA,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEd,EAAKC,UAAS,SAACX,GACb,MAAO,CACLC,SAAS,2BACJD,EAAMC,UADH,kBAELQ,EAAOC,SAxBlB,EA8BEE,cAAgB,SAACL,GACf,IAAQE,EAASF,EAAMC,OAAfC,KACFI,EAAU,aAASJ,EAAK,GAAGK,cAAgBL,EAAKM,MAAM,IAe5D,EAAKJ,UAAS,SAACX,GACb,OAAO,eACJa,GAfYG,EAeShB,EAAMC,SAASQ,MAX3B,WAATA,GAA8B,YAATA,GAHP,qKAIFQ,KAAKD,KAKE,KAAfA,IAVO,IAACA,MAlCrB,EAsDEE,UAAY,WACV,EAAKP,SAAS,CACZV,SAAU,CACRf,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTS,OAAQ,OA7DhB,EAkEEqB,qBAAuB,WACrB,OACE,EAAKnB,MAAME,UACR,EAAKF,MAAMG,WACX,EAAKH,MAAMI,YACX,EAAKJ,MAAMK,WAvEpB,EA2EEe,aAAe,SAACb,GACdA,EAAMc,iBAEN,IAAQC,EAAU,EAAKC,MAAfD,MACArB,EAAa,EAAKD,MAAlBC,SAEH,EAAKkB,yBAIVG,EAAMrB,GACN,EAAKiB,cAtFT,4CAyFE,WACE,MAMIM,KAAKxB,MAAMC,SALbf,EADF,EACEA,MACAC,EAFF,EAEEA,YACAC,EAHF,EAGEA,OACAC,EAJF,EAIEA,QACAS,EALF,EAKEA,OAGF,EAKI0B,KAAKxB,MAJPE,EADF,EACEA,SACAC,EAFF,EAEEA,UACAC,EAHF,EAGEA,WACAC,EAJF,EAIEA,UAGF,OACE,uBAAMf,UAAU,WAAWmC,SAAUD,KAAKJ,aAA1C,UACE,sBAAK9B,UAAU,mBAAf,UACE,sBAAKA,UAAU,0BAAf,UACE,uBAAOoC,QAAQ,aAAapC,UAAU,wBAAtC,oBAIA,uBACEqC,KAAK,OACLlB,KAAK,QACLC,MAAOxB,EACP0C,GAAG,aACHC,YAAY,oBACZvC,UAAWwC,IAAW,kBAAmB,CACvC,0BAA2B5B,IAE7B6B,SAAUP,KAAKlB,aACf0B,OAAQR,KAAKZ,iBAGbV,GAAY,yDAGhB,qBAAKZ,UAAU,0BAAf,SACE,0BACEmB,KAAK,cACLC,MAAOvB,EACPyC,GAAG,cACHC,YAAY,uBACZI,KAAM,EACN3C,UAAU,+CACVyC,SAAUP,KAAKlB,iBAInB,sBAAKhB,UAAU,0BAAf,UACE,uBAAOoC,QAAQ,SAASpC,UAAU,wBAAlC,qBAIA,uBACEqC,KAAK,OACLlB,KAAK,SACLC,MAAOtB,EACPwC,GAAG,SACHC,YAAY,kBACZvC,UAAWwC,IAAW,kBAAmB,CACvC,0BAA2B3B,IAE7B4B,SAAUP,KAAKlB,aACf0B,OAAQR,KAAKZ,iBAGbT,GAAa,qEAGjB,sBAAKb,UAAU,0BAAf,UACE,uBAAOoC,QAAQ,UAAUpC,UAAU,wBAAnC,sBAIA,uBACEqC,KAAK,OACLlB,KAAK,UACLC,MAAOrB,EACPuC,GAAG,UACHC,YAAY,iBACZvC,UAAWwC,IAAW,kBAAmB,CACvC,0BAA2B1B,IAE7B2B,SAAUP,KAAKlB,aACf0B,OAAQR,KAAKZ,iBAGbR,GAAc,oEAGlB,sBAAKd,UAAU,0BAAf,UACE,uBAAOoC,QAAQ,UAAUpC,UAAU,wBAAnC,qBAIA,uBACEqC,KAAK,OACLlB,KAAK,SACLC,MAAOZ,EACP8B,GAAG,SACHC,YAAY,gBACZvC,UAAWwC,IAAW,kBAAmB,CACvC,0BAA2BzB,IAE7B0B,SAAUP,KAAKlB,aACf0B,OAAQR,KAAKZ,iBAGbP,GAAa,8DAInB,wBAAQsB,KAAK,SAASrC,UAAU,mBAAhC,8BA7MR,GAA8B4C,IAAMC,Y,QCTvBC,EAAb,4MACEpC,MAAe,CACbL,OAAQ0C,GAFZ,EAKEC,SAAW,SAACrC,GACV,EAAKU,UAAS,SAACX,GACb,MAAO,CACLL,OAAO,GAAD,mBAAMK,EAAML,QAAZ,CAAoBM,SARlC,4CAaE,WACE,IAAQN,EAAW6B,KAAKxB,MAAhBL,OAER,OACE,sBAAKL,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYK,OAAQA,MAEtB,qBAAKL,UAAU,UAAf,SACE,cAAC,EAAD,CAAUgC,MAAOE,KAAKc,oBAtBhC,GAAyBJ,IAAMC,WCP/BI,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.7f89d7be.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React from 'react';\nimport classNames from 'classnames';\n\nimport { Movie } from '../../types/Movie';\n\nimport './NewMovie.scss';\n\ntype Props = {\n  onAdd: (newMovie: Movie) => void;\n};\n\ntype State = {\n  newMovie: Movie;\n  hasTitle: boolean;\n  hasImgUrl: boolean;\n  hasImdbUrl: boolean;\n  hasImdbId: boolean;\n};\n\nexport class NewMovie extends React.Component<Props, State> {\n  state: State = {\n    newMovie: {\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    },\n    hasTitle: true,\n    hasImgUrl: true,\n    hasImdbUrl: true,\n    hasImdbId: true,\n  };\n\n  handleChange = (\n    event: React.ChangeEvent<HTMLInputElement> | React.ChangeEvent<HTMLTextAreaElement>,\n  ) => {\n    const { name, value } = event.target;\n\n    this.setState((state) => {\n      return {\n        newMovie: {\n          ...state.newMovie,\n          [name]: value,\n        },\n      };\n    });\n  };\n\n  validateInput = (event: React.FocusEvent<HTMLInputElement, Element>) => {\n    const { name } = event.target;\n    const validation = `has${name[0].toUpperCase() + name.slice(1)}`;\n\n    const isValid = (fieldValue: string) => {\n      const regexUrl = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n      if (\n        (name === 'imgUrl' || name === 'imdbUrl')\n        && !regexUrl.test(fieldValue)\n      ) {\n        return false;\n      }\n\n      return fieldValue !== '';\n    };\n\n    this.setState((state) => {\n      return {\n        [validation]: isValid(state.newMovie[name as keyof Movie]),\n      } as Pick<State, 'hasTitle' | 'hasImgUrl' | 'hasImdbId' | 'hasImdbUrl'>;\n    });\n  };\n\n  clearForm = () => {\n    this.setState({\n      newMovie: {\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n      },\n    });\n  };\n\n  isSubmittedDataValid = () => {\n    return (\n      this.state.hasTitle\n      && this.state.hasImgUrl\n      && this.state.hasImdbUrl\n      && this.state.hasImdbId\n    );\n  };\n\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const { onAdd } = this.props;\n    const { newMovie } = this.state;\n\n    if (!this.isSubmittedDataValid()) {\n      return;\n    }\n\n    onAdd(newMovie);\n    this.clearForm();\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state.newMovie;\n\n    const {\n      hasTitle,\n      hasImgUrl,\n      hasImdbUrl,\n      hasImdbId,\n    } = this.state;\n\n    return (\n      <form className=\"NewMovie\" onSubmit={this.handleSubmit}>\n        <div className=\"NewMovie__fields\">\n          <div className=\"NewMovie__input-wrapper\">\n            <label htmlFor=\"movieTitle\" className=\"NewMovie__field-label\">\n              Title:\n            </label>\n\n            <input\n              type=\"text\"\n              name=\"title\"\n              value={title}\n              id=\"movieTitle\"\n              placeholder=\"Enter movie title\"\n              className={classNames('NewMovie__field', {\n                'NewMovie__field--error': !hasTitle,\n              })}\n              onChange={this.handleChange}\n              onBlur={this.validateInput}\n            />\n\n            {!hasTitle && <p>Please, provide title</p>}\n          </div>\n\n          <div className=\"NewMovie__input-wrapper\">\n            <textarea\n              name=\"description\"\n              value={description}\n              id=\"description\"\n              placeholder=\"Movie description...\"\n              rows={4}\n              className=\"NewMovie__field NewMovie__field--description\"\n              onChange={this.handleChange}\n            />\n          </div>\n\n          <div className=\"NewMovie__input-wrapper\">\n            <label htmlFor=\"imgUrl\" className=\"NewMovie__field-label\">\n              imgUrl:\n            </label>\n\n            <input\n              type=\"text\"\n              name=\"imgUrl\"\n              value={imgUrl}\n              id=\"imgUrl\"\n              placeholder=\"Enter image url\"\n              className={classNames('NewMovie__field', {\n                'NewMovie__field--error': !hasImgUrl,\n              })}\n              onChange={this.handleChange}\n              onBlur={this.validateInput}\n            />\n\n            {!hasImgUrl && <p>Please, provide correct image url</p>}\n          </div>\n\n          <div className=\"NewMovie__input-wrapper\">\n            <label htmlFor=\"imdbUrl\" className=\"NewMovie__field-label\">\n              imdbUrl:\n            </label>\n\n            <input\n              type=\"text\"\n              name=\"imdbUrl\"\n              value={imdbUrl}\n              id=\"imdbUrl\"\n              placeholder=\"Enter imdb url\"\n              className={classNames('NewMovie__field', {\n                'NewMovie__field--error': !hasImdbUrl,\n              })}\n              onChange={this.handleChange}\n              onBlur={this.validateInput}\n            />\n\n            {!hasImdbUrl && <p>Please, provide correct imdb url</p>}\n          </div>\n\n          <div className=\"NewMovie__input-wrapper\">\n            <label htmlFor=\"imdbUrl\" className=\"NewMovie__field-label\">\n              imdbId:\n            </label>\n\n            <input\n              type=\"text\"\n              name=\"imdbId\"\n              value={imdbId}\n              id=\"imdbId\"\n              placeholder=\"Enter imdb id\"\n              className={classNames('NewMovie__field', {\n                'NewMovie__field--error': !hasImdbId,\n              })}\n              onChange={this.handleChange}\n              onBlur={this.validateInput}\n            />\n\n            {!hasImdbId && <p>Please, provide imdb id</p>}\n          </div>\n        </div>\n\n        <button type=\"submit\" className=\"NewMovie__button\">\n          Add movie\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (newMovie: Movie) => {\n    this.setState((state) => {\n      return {\n        movies: [...state.movies, newMovie],\n      };\n    });\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}